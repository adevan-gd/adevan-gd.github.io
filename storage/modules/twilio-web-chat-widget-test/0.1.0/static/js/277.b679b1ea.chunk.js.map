{"version":3,"file":"static/js/277.b679b1ea.chunk.js","mappings":"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","sources":["reportWebVitals.js","components/window-container/WindowContainer.js","components/svg/ChatTextBubbleRightTail.js","components/svg/ChatTextBubbleLeftTail.js","components/chat-window/ChatTextBubble.js","components/chat-window/ChatWindow.js","ChatModule.js","bootstrap.js","../node_modules/react-dom/client.js"],"sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Tile } from '@Green-Dot-Corporation/eureka-ui-layouts';\nimport { EurekaMinus, EurekaX } from '@Green-Dot-Corporation/eureka-ui-icons';\nimport { Button } from '@Green-Dot-Corporation/eureka-ui-buttons';\n// Styles\nimport './styles/window-container.scss';\n\nclass WindowContainer extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        title: PropTypes.string,\n        shouldShowMinimizeBtn: PropTypes.bool,\n        shouldShowCloseBtn: PropTypes.bool,\n        onCloseBtnClick: PropTypes.func,\n        onMinimizeBtnClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        shouldShowMinimizeBtn: false,\n        shouldShowCloseBtn: false,\n        onCloseBtnClick: () => Promise.resolve(),\n        onMinimizeBtnClick: () => Promise.resolve(),\n    };\n\n    render() {\n        const { contextCls, children } = this.props;\n\n        return (\n            <Tile\n                renderHeading={this.renderHeading}\n                contextCls={cx(this.baseCls, contextCls)}\n            >\n                {children}\n            </Tile>\n        );\n    }\n\n    renderHeading = () => {\n        const { title, shouldShowMinimizeBtn, shouldShowCloseBtn } = this.props;\n\n        return (\n            <>\n                <div className={`${this.baseCls}__title`}>{title}</div>\n                {shouldShowMinimizeBtn && this.renderMinimizeBtn()}\n                {shouldShowCloseBtn && this.renderCloseBtn()}\n            </>\n        );\n    };\n\n    renderCloseBtn = () => {\n        const { onCloseBtnClick } = this.props;\n\n        return (\n            <div\n                className={cx(\n                    this.baseTitleBtnContainerCls,\n                    `${this.baseTitleBtnContainerCls}--close-btn-container`,\n                )}\n            >\n                <Button\n                    contextCls={cx(`${this.baseCls}__close-btn`)}\n                    renderIcon={this.renderCloseBtnIcon}\n                    onClick={onCloseBtnClick}\n                    // TODO: replace the aria-label title when localization available\n                    aria-label=\"Close Button\"\n                />\n            </div>\n        );\n    };\n\n    renderMinimizeBtn = () => {\n        const { onMinimizeBtnClick } = this.props;\n\n        return (\n            <div\n                className={cx(\n                    this.baseTitleBtnContainerCls,\n                    `${this.baseTitleBtnContainerCls}--minimize-btn-container`,\n                )}\n            >\n                <Button\n                    contextCls={cx(`${this.baseCls}__minimize-btn`)}\n                    renderIcon={this.renderMinimizeBtnIcon}\n                    onClick={onMinimizeBtnClick}\n                    // TODO: replace the aria-label title when localization available\n                    aria-label=\"Minimize Button\"\n                />\n            </div>\n        );\n    };\n\n    renderMinimizeBtnIcon = () => <EurekaMinus />;\n\n    renderCloseBtnIcon = () => <EurekaX />;\n\n    baseCls = 'web-chat-window-container';\n\n    baseTitleBtnContainerCls = `${this.baseCls}__title-btn-container`;\n}\n\nexport default WindowContainer;\n","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nclass ChatTextBubbleRightTail extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"12\"\n                    height=\"15\"\n                    viewBox=\"0 0 12 15\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M-0.000148773 0H5.99985C5.99985 4.82743 5.65399 12.7323 11.1514 15C4.94531 15 0.969548 12.3333 -0.000148773 11V0Z\"\n                        fill=\"currentColor\"\n                    />\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat-bubble-right-tail';\n}\n\nexport default ChatTextBubbleRightTail;\n","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nclass ChatTextBubbleLeftTail extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"11\"\n                    height=\"15\"\n                    viewBox=\"0 0 11 15\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M11 0H5C5 4.86555 5.60812 12.6867 0 15C6.20606 15 10.0303 12.3333 11 11V0Z\"\n                        fill=\"currentColor\"\n                    />\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat-bubble-left-tail';\n}\n\nexport default ChatTextBubbleLeftTail;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ChatTextBubbleRightTail from '../svg/ChatTextBubbleRightTail';\nimport ChatTextBubbleLeftTail from '../svg/ChatTextBubbleLeftTail';\n// Styles\nimport './styles/chat-text-bubble.scss';\n\nclass ChatTextBubble extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        text: PropTypes.string,\n        isTextFromMe: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        isTextFromMe: true,\n    };\n\n    render() {\n        const { contextCls, text, children } = this.props;\n        const modCls = this.getModCls();\n\n        return (\n            <div className={cx(this.baseCls, modCls, contextCls)}>\n                <div className={`${this.baseCls}__bubble-container`}>\n                    {text ?? children}\n                    {this.renderTail()}\n                </div>\n            </div>\n        );\n    }\n\n    renderTail = () => {\n        const { isTextFromMe } = this.props;\n        const BubbleTail = isTextFromMe\n            ? ChatTextBubbleRightTail\n            : ChatTextBubbleLeftTail;\n\n        return <BubbleTail contextCls={`${this.baseCls}__tail`} />;\n    };\n\n    // Get Modifier Classes\n    getModCls = () => {\n        const { isTextFromMe } = this.props;\n\n        return {\n            [`${this.baseCls}--from-me`]: isTextFromMe,\n            [`${this.baseCls}--from-other`]: !isTextFromMe,\n            [`${this.baseCls}--tail-right`]: isTextFromMe,\n            [`${this.baseCls}--tail-left`]: !isTextFromMe,\n        };\n    };\n\n    // Base class which all component class names should be\n    // derived from\n    baseCls = 'web-chat-text-bubble';\n}\n\nexport default ChatTextBubble;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport WindowContainer from '../window-container/WindowContainer';\nimport ChatTextBubble from './ChatTextBubble';\n// Styles\nimport './styles/chat-window.scss';\n\nclass ChatWindow extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <div className={cx(this.baseCls, contextCls)}>\n                <WindowContainer\n                    contextCls={cx(`${this.baseCls}__chat-window-container`)}\n                    // TODO: replace the hard code title when localization available\n                    title=\"Chat with an agent\"\n                    shouldShowCloseBtn\n                    shouldShowMinimizeBtn\n                    onCloseBtnClick={this.handleCloseBtnClick}\n                    onMinimizeBtnClick={this.handleMinimizeBtnClick}\n                >\n                    <div className={`${this.baseCls}__chat-text-container`}>\n                        <div className=\"messages-container\">\n                            {/* TODO: Replace the below to really chat text when API is ready */}\n                            <ChatTextBubble text=\"I’m having an issue with my direct deposit not showing up in my account. Can you help?\" />\n                            <ChatTextBubble\n                                text=\"Let me look that up for you. Hold one moment while I access your account.\"\n                                isTextFromMe={false}\n                            />\n                        </div>\n                        <div className=\"send-message-container\" />\n                    </div>\n                </WindowContainer>\n            </div>\n        );\n    }\n\n    handleCloseBtnClick = () => {\n        // TODO: will replace by real close conversation session when Gateway API is ready\n        console.log('close btn click');\n    };\n\n    handleMinimizeBtnClick = () => {\n        // TODO: will replace by minimize the window\n        console.log('min btn click');\n    };\n\n    baseCls = 'web-chat-window';\n}\n\nexport default ChatWindow;\n","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport ChatWindow from './components/chat-window/ChatWindow';\nimport './styles/chat-module.scss';\n\nclass ChatModule extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        containerElement: PropTypes.object,\n    };\n\n    render() {\n        const { contextCls, containerElement } = this.props;\n\n        if (containerElement) {\n            containerElement.style.position = 'relative';\n        }\n\n        return <ChatWindow contextCls={cx(this.baseCls, contextCls)} />;\n    }\n\n    baseCls = 'web-chat-module';\n}\n\nexport default ChatModule;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport initMirageServer from '@Green-Dot-Corporation/eureka-lib-mock-utils/src/initMirageServer';\nimport reportWebVitals from './reportWebVitals';\nimport registerRoutes from './mock/registerRoutes';\nimport ChatModule from './ChatModule';\nimport './styles/index.scss';\n\nif (process.env.NODE_ENV === 'development') {\n    // Shutdown any existing instance of server to avoid multiple pretender\n    // instances error\n    if (window.server && typeof window.server.shutdown === 'function') {\n        window.server.shutdown();\n    }\n\n    // Create server and pass routes and other options\n    window.server = initMirageServer({\n        routes() {\n            registerRoutes(this);\n        },\n    });\n}\nconst rootElement = document.getElementById('root');\nconst root = ReactDOM.createRoot(rootElement);\nroot.render(\n    <React.StrictMode>\n        <div>\n            Test Widget Page, when invoke the wiget, we should expose the\n            ChatModule only and set the containerElement to which element in the\n            existing page\n        </div>\n        <ChatModule containerElement={rootElement} />\n    </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WindowContainer","baseCls","renderHeading","props","title","shouldShowMinimizeBtn","shouldShowCloseBtn","className","renderMinimizeBtn","renderCloseBtn","onCloseBtnClick","cx","baseTitleBtnContainerCls","Button","contextCls","renderIcon","renderCloseBtnIcon","onClick","onMinimizeBtnClick","renderMinimizeBtnIcon","EurekaMinus","EurekaX","this","children","Tile","PureComponent","defaultProps","Promise","resolve","ChatTextBubbleRightTail","width","height","viewBox","fill","xmlns","d","ChatTextBubbleLeftTail","ChatTextBubble","renderTail","BubbleTail","isTextFromMe","getModCls","text","modCls","ChatWindow","handleCloseBtnClick","console","log","handleMinimizeBtnClick","ChatModule","containerElement","style","position","rootElement","document","getElementById","ReactDOM","render","reportWebVitals","m","require","exports","createRoot","hydrateRoot"],"sourceRoot":""}