{"version":3,"file":"static/js/481.4396f6fd.chunk.js","mappings":"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","sources":["ChatModule.js","components/chat-window/ChatTextBubble.js","components/chat-window/ChatWindow.js","components/svg/ChatTextBubbleLeftTail.js","components/svg/ChatTextBubbleRightTail.js","components/window-container/WindowContainer.js"],"sourcesContent":["import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport ChatWindow from './components/chat-window/ChatWindow';\nimport './styles/chat-module.scss';\n\nclass ChatModule extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        containerElement: PropTypes.object,\n    };\n\n    render() {\n        const { contextCls, containerElement } = this.props;\n\n        if (containerElement) {\n            containerElement.style.position = 'relative';\n        }\n\n        return <ChatWindow contextCls={cx(this.baseCls, contextCls)} />;\n    }\n\n    baseCls = 'web-chat-module';\n}\n\nexport default ChatModule;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ChatTextBubbleRightTail from '../svg/ChatTextBubbleRightTail';\nimport ChatTextBubbleLeftTail from '../svg/ChatTextBubbleLeftTail';\n// Styles\nimport './styles/chat-text-bubble.scss';\n\nclass ChatTextBubble extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        text: PropTypes.string,\n        isTextFromMe: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        isTextFromMe: true,\n    };\n\n    render() {\n        const { contextCls, text, children } = this.props;\n        const modCls = this.getModCls();\n\n        return (\n            <div className={cx(this.baseCls, modCls, contextCls)}>\n                <div className={`${this.baseCls}__bubble-container`}>\n                    {text ?? children}\n                    {this.renderTail()}\n                </div>\n            </div>\n        );\n    }\n\n    renderTail = () => {\n        const { isTextFromMe } = this.props;\n        const BubbleTail = isTextFromMe\n            ? ChatTextBubbleRightTail\n            : ChatTextBubbleLeftTail;\n\n        return <BubbleTail contextCls={`${this.baseCls}__tail`} />;\n    };\n\n    // Get Modifier Classes\n    getModCls = () => {\n        const { isTextFromMe } = this.props;\n\n        return {\n            [`${this.baseCls}--from-me`]: isTextFromMe,\n            [`${this.baseCls}--from-other`]: !isTextFromMe,\n            [`${this.baseCls}--tail-right`]: isTextFromMe,\n            [`${this.baseCls}--tail-left`]: !isTextFromMe,\n        };\n    };\n\n    // Base class which all component class names should be\n    // derived from\n    baseCls = 'web-chat-text-bubble';\n}\n\nexport default ChatTextBubble;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport WindowContainer from '../window-container/WindowContainer';\nimport ChatTextBubble from './ChatTextBubble';\n// Styles\nimport './styles/chat-window.scss';\n\nclass ChatWindow extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <div className={cx(this.baseCls, contextCls)}>\n                <WindowContainer\n                    contextCls={cx(`${this.baseCls}__chat-window-container`)}\n                    // TODO: replace the hard code title when localization available\n                    title=\"Chat with an agent\"\n                    shouldShowCloseBtn\n                    shouldShowMinimizeBtn\n                    onCloseBtnClick={this.handleCloseBtnClick}\n                    onMinimizeBtnClick={this.handleMinimizeBtnClick}\n                >\n                    <div className={`${this.baseCls}__chat-text-container`}>\n                        <div className=\"messages-container\">\n                            {/* TODO: Replace the below to really chat text when API is ready */}\n                            <ChatTextBubble text=\"Iâ€™m having an issue with my direct deposit not showing up in my account. Can you help?\" />\n                            <ChatTextBubble\n                                text=\"Let me look that up for you. Hold one moment while I access your account.\"\n                                isTextFromMe={false}\n                            />\n                        </div>\n                        <div className=\"send-message-container\" />\n                    </div>\n                </WindowContainer>\n            </div>\n        );\n    }\n\n    handleCloseBtnClick = () => {\n        // TODO: will replace by real close conversation session when Gateway API is ready\n        console.log('close btn click');\n    };\n\n    handleMinimizeBtnClick = () => {\n        // TODO: will replace by minimize the window\n        console.log('min btn click');\n    };\n\n    baseCls = 'web-chat-window';\n}\n\nexport default ChatWindow;\n","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nclass ChatTextBubbleLeftTail extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"11\"\n                    height=\"15\"\n                    viewBox=\"0 0 11 15\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M11 0H5C5 4.86555 5.60812 12.6867 0 15C6.20606 15 10.0303 12.3333 11 11V0Z\"\n                        fill=\"currentColor\"\n                    />\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat-bubble-left-tail';\n}\n\nexport default ChatTextBubbleLeftTail;\n","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nclass ChatTextBubbleRightTail extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"12\"\n                    height=\"15\"\n                    viewBox=\"0 0 12 15\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M-0.000148773 0H5.99985C5.99985 4.82743 5.65399 12.7323 11.1514 15C4.94531 15 0.969548 12.3333 -0.000148773 11V0Z\"\n                        fill=\"currentColor\"\n                    />\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat-bubble-right-tail';\n}\n\nexport default ChatTextBubbleRightTail;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Tile } from '@Green-Dot-Corporation/eureka-ui-layouts';\nimport { EurekaMinus, EurekaX } from '@Green-Dot-Corporation/eureka-ui-icons';\nimport { Button } from '@Green-Dot-Corporation/eureka-ui-buttons';\n// Styles\nimport './styles/window-container.scss';\n\nclass WindowContainer extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        title: PropTypes.string,\n        shouldShowMinimizeBtn: PropTypes.bool,\n        shouldShowCloseBtn: PropTypes.bool,\n        onCloseBtnClick: PropTypes.func,\n        onMinimizeBtnClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        shouldShowMinimizeBtn: false,\n        shouldShowCloseBtn: false,\n        onCloseBtnClick: () => Promise.resolve(),\n        onMinimizeBtnClick: () => Promise.resolve(),\n    };\n\n    render() {\n        const { contextCls, children } = this.props;\n\n        return (\n            <Tile\n                renderHeading={this.renderHeading}\n                contextCls={cx(this.baseCls, contextCls)}\n            >\n                {children}\n            </Tile>\n        );\n    }\n\n    renderHeading = () => {\n        const { title, shouldShowMinimizeBtn, shouldShowCloseBtn } = this.props;\n\n        return (\n            <>\n                <div className={`${this.baseCls}__title`}>{title}</div>\n                {shouldShowMinimizeBtn && this.renderMinimizeBtn()}\n                {shouldShowCloseBtn && this.renderCloseBtn()}\n            </>\n        );\n    };\n\n    renderCloseBtn = () => {\n        const { onCloseBtnClick } = this.props;\n\n        return (\n            <div\n                className={cx(\n                    this.baseTitleBtnContainerCls,\n                    `${this.baseTitleBtnContainerCls}--close-btn-container`,\n                )}\n            >\n                <Button\n                    contextCls={cx(`${this.baseCls}__close-btn`)}\n                    renderIcon={this.renderCloseBtnIcon}\n                    onClick={onCloseBtnClick}\n                    // TODO: replace the aria-label title when localization available\n                    aria-label=\"Close Button\"\n                />\n            </div>\n        );\n    };\n\n    renderMinimizeBtn = () => {\n        const { onMinimizeBtnClick } = this.props;\n\n        return (\n            <div\n                className={cx(\n                    this.baseTitleBtnContainerCls,\n                    `${this.baseTitleBtnContainerCls}--minimize-btn-container`,\n                )}\n            >\n                <Button\n                    contextCls={cx(`${this.baseCls}__minimize-btn`)}\n                    renderIcon={this.renderMinimizeBtnIcon}\n                    onClick={onMinimizeBtnClick}\n                    // TODO: replace the aria-label title when localization available\n                    aria-label=\"Minimize Button\"\n                />\n            </div>\n        );\n    };\n\n    renderMinimizeBtnIcon = () => <EurekaMinus />;\n\n    renderCloseBtnIcon = () => <EurekaX />;\n\n    baseCls = 'web-chat-window-container';\n\n    baseTitleBtnContainerCls = `${this.baseCls}__title-btn-container`;\n}\n\nexport default WindowContainer;\n"],"names":["ChatModule","baseCls","this","props","contextCls","containerElement","style","position","cx","PureComponent","ChatTextBubble","renderTail","BubbleTail","isTextFromMe","ChatTextBubbleRightTail","ChatTextBubbleLeftTail","getModCls","text","children","modCls","className","defaultProps","ChatWindow","handleCloseBtnClick","console","log","handleMinimizeBtnClick","title","shouldShowCloseBtn","shouldShowMinimizeBtn","onCloseBtnClick","onMinimizeBtnClick","width","height","viewBox","fill","xmlns","d","WindowContainer","renderHeading","renderMinimizeBtn","renderCloseBtn","baseTitleBtnContainerCls","renderIcon","renderCloseBtnIcon","onClick","renderMinimizeBtnIcon","Promise","resolve"],"sourceRoot":""}